---
# ubuntu-install-k8s.yml for nerve4-managed-kubernetes

- name: Update package cache
  ansible.builtin.apt:
    update_cache: yes

- name: Install and configure dependencies
  ansible.builtin.apt:
    pkg: "{{ ubuntu_pkgs }}"

- name: Create containerd config file
  ansible.builtin.file:
    path: "/etc/modules-load.d/containerd.conf"
    state: touch

- name: Setup containerd config file
  ansible.builtin.blockinfile:
    path: "/etc/modules-load.d/containerd.conf"
    block: |
      overlay
      br_netfilter

- name: Run modprobe
  become: true
  ansible.builtin.shell: |
    sudo modprobe overlay
    sudo modprobe br_netfilter

- name: Create sysctl for Containerd
  ansible.builtin.file:
    path: "/etc/sysctl.d/containerd.conf"
    state: "touch"

- name: Setup sysctl for Containerd
  ansible.builtin.blockinfile:
    path: "/etc/sysctl.d/containerd.conf"
    block: |
      net.bridge.bridge-nf-call-iptables = 1
      net.bridge.bridge-nf-call-ip6tables = 1
      net.ipv4.ip_forward = 1

- name: Apply new settings
  become: true
  ansible.builtin.command: 
    cmd: sysctl --system

- name: Create keyrings directory
  become: yes
  ansible.builtin.file:
    path: /etc/apt/keyrings
    state: directory
    mode: 0755

- name: Add docker gpg key
  become: true
  ansible.builtin.shell: |
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
    sudo chmod a+r /etc/apt/keyrings/docker.gpg

- name: Set up the repository
  become: true
  ansible.builtin.shell: |
    echo \
    "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
    "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | \
    sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

- name: Update Cache
  become: true
  ansible.builtin.shell: |
    sudo apt update

- name: Install containerd on Ubuntu based hosts
  ansible.builtin.apt: 
    name: "containerd"
    state: present

- name: Create a containerd if it does not exist
  ansible.builtin.file:
    path: /etc/containerd
    state: directory
    mode: '0644'

- name: Create a containerd config.toml
  become: true
  ansible.builtin.shell: |
    sudo containerd config default | sudo tee /etc/containerd/config.toml

- name: Restart and Enable containerd service
  ansible.builtin.service:
    name: containerd
    enabled: yes
    state: restarted

- name: Disable swap
  become: true
  ansible.builtin.shell: |
    sudo swapoff -a
    sudo rm /swap.img
    sudo sed -i '/\tswap\t/d' /etc/fstab

- name: Add gpg key
  become: true
  ansible.builtin.shell: |
    curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -

- name: Create kubernetes repo file
  ansible.builtin.file:
    path: "/etc/apt/sources.list.d/kubernetes.list"
    state: "touch"

- name: Add K8s Source
  ansible.builtin.blockinfile:
    path: "/etc/apt/sources.list.d/kubernetes.list"
    block: |
      deb https://apt.kubernetes.io/ kubernetes-xenial main

- name: Update Cache
  become: true
  ansible.builtin.shell: |
    sudo apt update

- name: Reboot / Temproary fix for dpkg lock :S
  ansible.builtin.reboot:
    reboot_timeout: "{{ ubuntu_reboot_timeo }}"

- name: Install kubernetes packages
  become: true
  ansible.builtin.apt:
    name: "{{ kubernetes_ubuntu_pkgs }}"